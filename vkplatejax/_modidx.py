# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "main",
        "doc_baseurl": "/vkplatejax",
        "doc_host": "https://rodrigodzf.github.io",
        "git_url": "https://github.com/rodrigodzf/vkplatejax",
        "lib_path": "vkplatejax",
    },
    "syms": {
        "vkplatejax.coupling": {
            "vkplatejax.coupling.H_tensor_rectangular": (
                "coupling.html#h_tensor_rectangular",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling._basis": (
                "coupling.html#_basis",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.airy_stress_coefficients": (
                "coupling.html#airy_stress_coefficients",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.assemble_K_and_M": (
                "coupling.html#assemble_k_and_m",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.basis": (
                "coupling.html#basis",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.build_I1": (
                "coupling.html#build_i1",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.build_I2": (
                "coupling.html#build_i2",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.build_I4": (
                "coupling.html#build_i4",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.build_s_matrix": (
                "coupling.html#build_s_matrix",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.compute_coupling_matrix": (
                "coupling.html#compute_coupling_matrix",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.compute_partial_integrals": (
                "coupling.html#compute_partial_integrals",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.g1": ("coupling.html#g1", "vkplatejax/coupling.py"),
            "vkplatejax.coupling.g2": ("coupling.html#g2", "vkplatejax/coupling.py"),
            "vkplatejax.coupling.g3": ("coupling.html#g3", "vkplatejax/coupling.py"),
            "vkplatejax.coupling.g4": ("coupling.html#g4", "vkplatejax/coupling.py"),
            "vkplatejax.coupling.g5": ("coupling.html#g5", "vkplatejax/coupling.py"),
            "vkplatejax.coupling.g6": ("coupling.html#g6", "vkplatejax/coupling.py"),
            "vkplatejax.coupling.i10_mat": (
                "coupling.html#i10_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i11_mat": (
                "coupling.html#i11_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i12_mat": (
                "coupling.html#i12_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i13_mat": (
                "coupling.html#i13_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i1_mat": (
                "coupling.html#i1_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i2_mat": (
                "coupling.html#i2_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i3_mat": (
                "coupling.html#i3_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i4_mat": (
                "coupling.html#i4_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i5_mat": (
                "coupling.html#i5_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.i9_mat": (
                "coupling.html#i9_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.int1": (
                "coupling.html#int1",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.int2": (
                "coupling.html#int2",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.int2_mat": (
                "coupling.html#int2_mat",
                "vkplatejax/coupling.py",
            ),
            "vkplatejax.coupling.int4": (
                "coupling.html#int4",
                "vkplatejax/coupling.py",
            ),
        },
        "vkplatejax.excitations": {
            "vkplatejax.excitations.create_1d_raised_cosine": (
                "excitations.html#create_1d_raised_cosine",
                "vkplatejax/excitations.py",
            ),
            "vkplatejax.excitations.create_pluck_modal": (
                "excitations.html#create_pluck_modal",
                "vkplatejax/excitations.py",
            ),
            "vkplatejax.excitations.create_raised_cosine": (
                "excitations.html#create_raised_cosine",
                "vkplatejax/excitations.py",
            ),
        },
        "vkplatejax.ftm": {
            "vkplatejax.ftm.CircularDrumHeadParameters": (
                "ftm.html#circulardrumheadparameters",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.CircularDrumHeadParameters.avanzini": (
                "ftm.html#circulardrumheadparameters.avanzini",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.CircularDrumHeadParameters.bending_stiffness": (
                "ftm.html#circulardrumheadparameters.bending_stiffness",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.CircularDrumHeadParameters.density": (
                "ftm.html#circulardrumheadparameters.density",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.PhysicalParameters": (
                "ftm.html#physicalparameters",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.PhysicalParameters.asdict": (
                "ftm.html#physicalparameters.asdict",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.PhysicalParameters.tabulate": (
                "ftm.html#physicalparameters.tabulate",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.PlateParameters": (
                "ftm.html#plateparameters",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.PlateParameters.bending_stiffness": (
                "ftm.html#plateparameters.bending_stiffness",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.PlateParameters.density": (
                "ftm.html#plateparameters.density",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.StringParameters": (
                "ftm.html#stringparameters",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.StringParameters.bass_string": (
                "ftm.html#stringparameters.bass_string",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.StringParameters.bending_stiffness": (
                "ftm.html#stringparameters.bending_stiffness",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.StringParameters.density": (
                "ftm.html#stringparameters.density",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.StringParameters.guitar_string_B_schafer": (
                "ftm.html#stringparameters.guitar_string_b_schafer",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.StringParameters.guitar_string_D": (
                "ftm.html#stringparameters.guitar_string_d",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.StringParameters.piano_string": (
                "ftm.html#stringparameters.piano_string",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.damping_term": (
                "ftm.html#damping_term",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.damping_term_simple": (
                "ftm.html#damping_term_simple",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.dblintegral": ("ftm.html#dblintegral", "vkplatejax/ftm.py"),
            "vkplatejax.ftm.drumhead_eigenfunctions": (
                "ftm.html#drumhead_eigenfunctions",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.drumhead_eigenvalues": (
                "ftm.html#drumhead_eigenvalues",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.drumhead_wavenumbers": (
                "ftm.html#drumhead_wavenumbers",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.eigenvalues_from_drumhead_pde": (
                "ftm.html#eigenvalues_from_drumhead_pde",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.eigenvalues_from_pde": (
                "ftm.html#eigenvalues_from_pde",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.eigenvalues_from_plate_pde": (
                "ftm.html#eigenvalues_from_plate_pde",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.evaluate_rectangular_eigenfunctions": (
                "ftm.html#evaluate_rectangular_eigenfunctions",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.forward_STL": ("ftm.html#forward_stl", "vkplatejax/ftm.py"),
            "vkplatejax.ftm.forward_STL_2d": (
                "ftm.html#forward_stl_2d",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.forward_STL_drumhead": (
                "ftm.html#forward_stl_drumhead",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.inverse_STL": ("ftm.html#inverse_stl", "vkplatejax/ftm.py"),
            "vkplatejax.ftm.inverse_STL_2d": (
                "ftm.html#inverse_stl_2d",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.inverse_STL_drumhead": (
                "ftm.html#inverse_stl_drumhead",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.othonormal_eigenfunctions": (
                "ftm.html#othonormal_eigenfunctions",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.plate_eigenfunctions": (
                "ftm.html#plate_eigenfunctions",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.plate_eigenvalues": (
                "ftm.html#plate_eigenvalues",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.plate_wavenumbers": (
                "ftm.html#plate_wavenumbers",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.sample_parallel_tf": (
                "ftm.html#sample_parallel_tf",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.stiffness_term": (
                "ftm.html#stiffness_term",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.string_eigenfunctions": (
                "ftm.html#string_eigenfunctions",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.string_eigenvalues": (
                "ftm.html#string_eigenvalues",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.string_eigenvalues_sqrt": (
                "ftm.html#string_eigenvalues_sqrt",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.tf_excitation_continuous": (
                "ftm.html#tf_excitation_continuous",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.tf_excitation_discrete": (
                "ftm.html#tf_excitation_discrete",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.tf_freqs": ("ftm.html#tf_freqs", "vkplatejax/ftm.py"),
            "vkplatejax.ftm.tf_initial_conditions_continuous": (
                "ftm.html#tf_initial_conditions_continuous",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.tf_initial_conditions_continuous_2": (
                "ftm.html#tf_initial_conditions_continuous_2",
                "vkplatejax/ftm.py",
            ),
            "vkplatejax.ftm.tf_initial_conditions_discrete": (
                "ftm.html#tf_initial_conditions_discrete",
                "vkplatejax/ftm.py",
            ),
        },
        "vkplatejax.interpolation": {
            "vkplatejax.interpolation.bilinear_interpolation": (
                "interpolation.html#bilinear_interpolation",
                "vkplatejax/interpolation.py",
            )
        },
        "vkplatejax.losses": {
            "vkplatejax.losses.compute_mag": (
                "losses.html#compute_mag",
                "vkplatejax/losses.py",
            ),
            "vkplatejax.losses.log_mag": (
                "losses.html#log_mag",
                "vkplatejax/losses.py",
            ),
            "vkplatejax.losses.log_mag_loss": (
                "losses.html#log_mag_loss",
                "vkplatejax/losses.py",
            ),
            "vkplatejax.losses.quantile_function": (
                "losses.html#quantile_function",
                "vkplatejax/losses.py",
            ),
            "vkplatejax.losses.spectral_convergence_loss": (
                "losses.html#spectral_convergence_loss",
                "vkplatejax/losses.py",
            ),
            "vkplatejax.losses.spectral_wasserstein": (
                "losses.html#spectral_wasserstein",
                "vkplatejax/losses.py",
            ),
            "vkplatejax.losses.wasserstein_1d": (
                "losses.html#wasserstein_1d",
                "vkplatejax/losses.py",
            ),
        },
        "vkplatejax.num_utils": {
            "vkplatejax.num_utils.biharmonic_eigendecomposition": (
                "num_utils.html#biharmonic_eigendecomposition",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.compute_coupling_matrix_numerical": (
                "num_utils.html#compute_coupling_matrix_numerical",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.double_trapezoid": (
                "num_utils.html#double_trapezoid",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.double_trapezoid_flat": (
                "num_utils.html#double_trapezoid_flat",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.eigenMAC": (
                "num_utils.html#eigenmac",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.multiresolution_eigendecomposition": (
                "num_utils.html#multiresolution_eigendecomposition",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.pad_lower": (
                "num_utils.html#pad_lower",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.pad_upper": (
                "num_utils.html#pad_upper",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.polarisation": (
                "num_utils.html#polarisation",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.second_derivative": (
                "num_utils.html#second_derivative",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.second_derivative_mixed": (
                "num_utils.html#second_derivative_mixed",
                "vkplatejax/num_utils.py",
            ),
            "vkplatejax.num_utils.vkoperator": (
                "num_utils.html#vkoperator",
                "vkplatejax/num_utils.py",
            ),
        },
        "vkplatejax.sv": {
            "vkplatejax.sv.A_inv_vector": ("sv.html#a_inv_vector", "vkplatejax/sv.py"),
            "vkplatejax.sv.B_vector": ("sv.html#b_vector", "vkplatejax/sv.py"),
            "vkplatejax.sv.C_vector": ("sv.html#c_vector", "vkplatejax/sv.py"),
            "vkplatejax.sv.solve_sv_berger_jax_scan": (
                "sv.html#solve_sv_berger_jax_scan",
                "vkplatejax/sv.py",
            ),
            "vkplatejax.sv.solve_sv_vk_jax_scan": (
                "sv.html#solve_sv_vk_jax_scan",
                "vkplatejax/sv.py",
            ),
        },
        "vkplatejax.utils": {
            "vkplatejax.utils.eigenMAC": ("utils.html#eigenmac", "vkplatejax/utils.py"),
            "vkplatejax.utils.impulse_response": (
                "utils.html#impulse_response",
                "vkplatejax/utils.py",
            ),
            "vkplatejax.utils.to_db": ("utils.html#to_db", "vkplatejax/utils.py"),
        },
    },
}
