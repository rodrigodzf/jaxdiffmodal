# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "main",
        "doc_baseurl": "/jaxdiffmodal",
        "doc_host": "https://rodrigodzf.github.io",
        "git_url": "https://github.com/rodrigodzf/jaxdiffmodal",
        "lib_path": "jaxdiffmodal",
    },
    "syms": {
        "jaxdiffmodal.coupling": {
            "jaxdiffmodal.coupling.H_tensor_rectangular": (
                "api/coupling.html#h_tensor_rectangular",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling._basis": (
                "api/coupling.html#_basis",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.airy_stress_coefficients": (
                "api/coupling.html#airy_stress_coefficients",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.assemble_K_and_M": (
                "api/coupling.html#assemble_k_and_m",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.basis": (
                "api/coupling.html#basis",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.build_I1": (
                "api/coupling.html#build_i1",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.build_I2": (
                "api/coupling.html#build_i2",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.build_I4": (
                "api/coupling.html#build_i4",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.build_s_matrix": (
                "api/coupling.html#build_s_matrix",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.compute_coupling_matrix": (
                "api/coupling.html#compute_coupling_matrix",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.compute_partial_integrals": (
                "api/coupling.html#compute_partial_integrals",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.g1": (
                "api/coupling.html#g1",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.g2": (
                "api/coupling.html#g2",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.g3": (
                "api/coupling.html#g3",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.g4": (
                "api/coupling.html#g4",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.g5": (
                "api/coupling.html#g5",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.g6": (
                "api/coupling.html#g6",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i10_mat": (
                "api/coupling.html#i10_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i11_mat": (
                "api/coupling.html#i11_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i12_mat": (
                "api/coupling.html#i12_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i13_mat": (
                "api/coupling.html#i13_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i1_mat": (
                "api/coupling.html#i1_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i2_mat": (
                "api/coupling.html#i2_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i3_mat": (
                "api/coupling.html#i3_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i4_mat": (
                "api/coupling.html#i4_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i5_mat": (
                "api/coupling.html#i5_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.i9_mat": (
                "api/coupling.html#i9_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.int1": (
                "api/coupling.html#int1",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.int2": (
                "api/coupling.html#int2",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.int2_mat": (
                "api/coupling.html#int2_mat",
                "jaxdiffmodal/coupling.py",
            ),
            "jaxdiffmodal.coupling.int4": (
                "api/coupling.html#int4",
                "jaxdiffmodal/coupling.py",
            ),
        },
        "jaxdiffmodal.excitations": {
            "jaxdiffmodal.excitations.create_1d_raised_cosine": (
                "api/excitations.html#create_1d_raised_cosine",
                "jaxdiffmodal/excitations.py",
            ),
            "jaxdiffmodal.excitations.create_pluck_modal": (
                "api/excitations.html#create_pluck_modal",
                "jaxdiffmodal/excitations.py",
            ),
            "jaxdiffmodal.excitations.create_raised_cosine": (
                "api/excitations.html#create_raised_cosine",
                "jaxdiffmodal/excitations.py",
            ),
        },
        "jaxdiffmodal.feautures": {
            "jaxdiffmodal.feautures.CQT1992v2": (
                "api/features.html#cqt1992v2",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.CQT1992v2.__call__": (
                "api/features.html#cqt1992v2.__call__",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.CQT1992v2.__init__": (
                "api/features.html#cqt1992v2.__init__",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.CQT1992v2.forward": (
                "api/features.html#cqt1992v2.forward",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.broadcast_dim": (
                "api/features.html#broadcast_dim",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.conv1d_efficient": (
                "api/features.html#conv1d_efficient",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.cqt_transform": (
                "api/features.html#cqt_transform",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.create_cqt_kernels": (
                "api/features.html#create_cqt_kernels",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.get_window_dispatch": (
                "api/features.html#get_window_dispatch",
                "jaxdiffmodal/feautures.py",
            ),
            "jaxdiffmodal.feautures.nextpow2": (
                "api/features.html#nextpow2",
                "jaxdiffmodal/feautures.py",
            ),
        },
        "jaxdiffmodal.ftm": {
            "jaxdiffmodal.ftm.CircularDrumHeadParameters": (
                "api/ftm.html#circulardrumheadparameters",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.CircularDrumHeadParameters.avanzini": (
                "api/ftm.html#circulardrumheadparameters.avanzini",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.CircularDrumHeadParameters.bending_stiffness": (
                "api/ftm.html#circulardrumheadparameters.bending_stiffness",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.CircularDrumHeadParameters.density": (
                "api/ftm.html#circulardrumheadparameters.density",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.PhysicalParameters": (
                "api/ftm.html#physicalparameters",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.PhysicalParameters.asdict": (
                "api/ftm.html#physicalparameters.asdict",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.PhysicalParameters.tabulate": (
                "api/ftm.html#physicalparameters.tabulate",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.PlateParameters": (
                "api/ftm.html#plateparameters",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.PlateParameters.bending_stiffness": (
                "api/ftm.html#plateparameters.bending_stiffness",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.PlateParameters.density": (
                "api/ftm.html#plateparameters.density",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.StringParameters": (
                "api/ftm.html#stringparameters",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.StringParameters.bass_string": (
                "api/ftm.html#stringparameters.bass_string",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.StringParameters.bending_stiffness": (
                "api/ftm.html#stringparameters.bending_stiffness",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.StringParameters.density": (
                "api/ftm.html#stringparameters.density",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.StringParameters.guitar_string_B_schafer": (
                "api/ftm.html#stringparameters.guitar_string_b_schafer",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.StringParameters.guitar_string_D": (
                "api/ftm.html#stringparameters.guitar_string_d",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.StringParameters.piano_string": (
                "api/ftm.html#stringparameters.piano_string",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.damping_term": (
                "api/ftm.html#damping_term",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.damping_term_simple": (
                "api/ftm.html#damping_term_simple",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.dblintegral": (
                "api/ftm.html#dblintegral",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.drumhead_eigenfunctions": (
                "api/ftm.html#drumhead_eigenfunctions",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.drumhead_eigenvalues": (
                "api/ftm.html#drumhead_eigenvalues",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.drumhead_wavenumbers": (
                "api/ftm.html#drumhead_wavenumbers",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.eigenvalues_from_pde": (
                "api/ftm.html#eigenvalues_from_pde",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.evaluate_rectangular_eigenfunctions": (
                "api/ftm.html#evaluate_rectangular_eigenfunctions",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.evaluate_string_eigenfunctions": (
                "api/ftm.html#evaluate_string_eigenfunctions",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.forward_STL": (
                "api/ftm.html#forward_stl",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.forward_STL_2d": (
                "api/ftm.html#forward_stl_2d",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.forward_STL_drumhead": (
                "api/ftm.html#forward_stl_drumhead",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.inverse_STL": (
                "api/ftm.html#inverse_stl",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.inverse_STL_2d": (
                "api/ftm.html#inverse_stl_2d",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.inverse_STL_drumhead": (
                "api/ftm.html#inverse_stl_drumhead",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.plate_eigenfunctions": (
                "api/ftm.html#plate_eigenfunctions",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.plate_eigenvalues": (
                "api/ftm.html#plate_eigenvalues",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.plate_wavenumbers": (
                "api/ftm.html#plate_wavenumbers",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.sample_parallel_tf": (
                "api/ftm.html#sample_parallel_tf",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.stiffness_term": (
                "api/ftm.html#stiffness_term",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.string_eigenfunctions": (
                "api/ftm.html#string_eigenfunctions",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.string_eigenvalues": (
                "api/ftm.html#string_eigenvalues",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.tf_excitation_continuous": (
                "api/ftm.html#tf_excitation_continuous",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.tf_excitation_discrete": (
                "api/ftm.html#tf_excitation_discrete",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.tf_initial_conditions_continuous": (
                "api/ftm.html#tf_initial_conditions_continuous",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.tf_initial_conditions_continuous_2": (
                "api/ftm.html#tf_initial_conditions_continuous_2",
                "jaxdiffmodal/ftm.py",
            ),
            "jaxdiffmodal.ftm.tf_initial_conditions_discrete": (
                "api/ftm.html#tf_initial_conditions_discrete",
                "jaxdiffmodal/ftm.py",
            ),
        },
        "jaxdiffmodal.losses": {
            "jaxdiffmodal.losses.compute_mag": (
                "api/losses.html#compute_mag",
                "jaxdiffmodal/losses.py",
            ),
            "jaxdiffmodal.losses.log_mag": (
                "api/losses.html#log_mag",
                "jaxdiffmodal/losses.py",
            ),
            "jaxdiffmodal.losses.log_mag_loss": (
                "api/losses.html#log_mag_loss",
                "jaxdiffmodal/losses.py",
            ),
            "jaxdiffmodal.losses.quantile_function": (
                "api/losses.html#quantile_function",
                "jaxdiffmodal/losses.py",
            ),
            "jaxdiffmodal.losses.spectral_convergence_loss": (
                "api/losses.html#spectral_convergence_loss",
                "jaxdiffmodal/losses.py",
            ),
            "jaxdiffmodal.losses.spectral_wasserstein": (
                "api/losses.html#spectral_wasserstein",
                "jaxdiffmodal/losses.py",
            ),
            "jaxdiffmodal.losses.wasserstein_1d": (
                "api/losses.html#wasserstein_1d",
                "jaxdiffmodal/losses.py",
            ),
        },
        "jaxdiffmodal.lpc": {
            "jaxdiffmodal.lpc.autocorr": (
                "api/lpc.html#autocorr",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.coeffs_and_residual": (
                "api/lpc.html#coeffs_and_residual",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.covariance_matrix": (
                "api/lpc.html#covariance_matrix",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.covariance_matrix_np": (
                "api/lpc.html#covariance_matrix_np",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.discrete_convolution": (
                "api/lpc.html#discrete_convolution",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.inverse_filter_np": (
                "api/lpc.html#inverse_filter_np",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.jitted_linear_solve": (
                "api/lpc.html#jitted_linear_solve",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.jitted_lstsq": (
                "api/lpc.html#jitted_lstsq",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.linear_prediction": (
                "api/lpc.html#linear_prediction",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.linear_prediction_np": (
                "api/lpc.html#linear_prediction_np",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.lpc_cpu_solve": (
                "api/lpc.html#lpc_cpu_solve",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.next_power_of_2": (
                "api/lpc.html#next_power_of_2",
                "jaxdiffmodal/lpc.py",
            ),
            "jaxdiffmodal.lpc.unfold": ("api/lpc.html#unfold", "jaxdiffmodal/lpc.py"),
            "jaxdiffmodal.lpc.unfold_np": (
                "api/lpc.html#unfold_np",
                "jaxdiffmodal/lpc.py",
            ),
        },
        "jaxdiffmodal.num_utils": {
            "jaxdiffmodal.num_utils.biharmonic_eigendecomposition": (
                "api/num_utils.html#biharmonic_eigendecomposition",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.compute_coupling_matrix_numerical": (
                "api/num_utils.html#compute_coupling_matrix_numerical",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.double_trapezoid": (
                "api/num_utils.html#double_trapezoid",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.double_trapezoid_flat": (
                "api/num_utils.html#double_trapezoid_flat",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.eigenMAC": (
                "api/num_utils.html#eigenmac",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.multiresolution_eigendecomposition": (
                "api/num_utils.html#multiresolution_eigendecomposition",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.pad_lower": (
                "api/num_utils.html#pad_lower",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.pad_upper": (
                "api/num_utils.html#pad_upper",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.polarisation": (
                "api/num_utils.html#polarisation",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.second_derivative": (
                "api/num_utils.html#second_derivative",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.second_derivative_mixed": (
                "api/num_utils.html#second_derivative_mixed",
                "jaxdiffmodal/num_utils.py",
            ),
            "jaxdiffmodal.num_utils.vkoperator": (
                "api/num_utils.html#vkoperator",
                "jaxdiffmodal/num_utils.py",
            ),
        },
        "jaxdiffmodal.time_integrators": {
            "jaxdiffmodal.time_integrators.A_inv_vector": (
                "api/time_integrators.html#a_inv_vector",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.B_vector": (
                "api/time_integrators.html#b_vector",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.C_vector": (
                "api/time_integrators.html#c_vector",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.make_identity_nl_fn": (
                "api/time_integrators.html#make_identity_nl_fn",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.make_tm_nl_fn": (
                "api/time_integrators.html#make_tm_nl_fn",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.make_vk_nl_fn": (
                "api/time_integrators.html#make_vk_nl_fn",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.plate_tau_with_density": (
                "api/time_integrators.html#plate_tau_with_density",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.rk4_step": (
                "api/time_integrators.html#rk4_step",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.second_order_step": (
                "api/time_integrators.html#second_order_step",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_sinusoidal": (
                "api/time_integrators.html#solve_sinusoidal",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_sinusoidal_excitation": (
                "api/time_integrators.html#solve_sinusoidal_excitation",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_sv_excitation": (
                "api/time_integrators.html#solve_sv_excitation",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_sv_initial_conditions": (
                "api/time_integrators.html#solve_sv_initial_conditions",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_sv_vk_jax_scan": (
                "api/time_integrators.html#solve_sv_vk_jax_scan",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_tf_excitation": (
                "api/time_integrators.html#solve_tf_excitation",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_tf_ic": (
                "api/time_integrators.html#solve_tf_ic",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.solve_tf_initial_conditions": (
                "api/time_integrators.html#solve_tf_initial_conditions",
                "jaxdiffmodal/time_integrators.py",
            ),
            "jaxdiffmodal.time_integrators.string_tau_with_density": (
                "api/time_integrators.html#string_tau_with_density",
                "jaxdiffmodal/time_integrators.py",
            ),
        },
        "jaxdiffmodal.utils": {
            "jaxdiffmodal.utils.bark2hz": (
                "api/utils.html#bark2hz",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.compute_spectrogram": (
                "api/utils.html#compute_spectrogram",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.display_audio_with_title": (
                "api/utils.html#display_audio_with_title",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.hz2bark": (
                "api/utils.html#hz2bark",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.hz2mel": (
                "api/utils.html#hz2mel",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.iir_filter_parallel": (
                "api/utils.html#iir_filter_parallel",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.impulse_response": (
                "api/utils.html#impulse_response",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.mel2hz": (
                "api/utils.html#mel2hz",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.next_root": (
                "api/utils.html#next_root",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.plot_poles_zeros": (
                "api/utils.html#plot_poles_zeros",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.safe_log": (
                "api/utils.html#safe_log",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.tf_freqs": (
                "api/utils.html#tf_freqs",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.tf_freqz": (
                "api/utils.html#tf_freqz",
                "jaxdiffmodal/utils.py",
            ),
            "jaxdiffmodal.utils.to_db": (
                "api/utils.html#to_db",
                "jaxdiffmodal/utils.py",
            ),
        },
    },
}
