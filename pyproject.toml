[project]
name = "jaxdiffmodal"
version = "0.1.0"
description = "A collection of vibration models (e.g. von Kármán plates, tension-modulated and stiff strings) implemented in JAX for fast, differentiable simulations"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "jax>=0.5.0",
    "einops>=0.8.0",
    "flax>=0.10.2",
    "ipywidgets>=8.1.5",
    "matplotlib>=3.10.0",
    "nemus-magpie",
    "numpy==2.1.0",
    "pandas>=2.2.3",
    "scipy>=1.15.1",
    "soundfile>=0.13.1",
    "sympy>=1.13.3",
    "tabulate>=0.9.0",
    "tensorly>=0.9.0",
    "tqdm>=4.67.1",
    "ott-jax>=0.5.0",
    "fouriax>=0.1.1",
    "equinox>=0.11.12",
]

[project.optional-dependencies]
cuda = [
    "jax[cuda12]>=0.5.0; sys_platform == 'linux'",
    "cuquantum-python-cu12>=24.11.0; sys_platform == 'linux'",
    "cupy-cuda12x>=13.3.0",
]
dev = [
    "ipykernel>=6.29.5",
    "nbdev>=2.3.34", 
    "poethepoet>=0.32.1",
    "ruff>=0.9.2",
]
benchmark = [
    "jaxopt>=0.8.3",
    "spectrum>=0.9.0",
    "lineax>=0.0.7",
    "soxr>=0.5.0.post1",
    "seaborn>=0.13.2",
    "scienceplots>=2.1.1",
    "llvmlite>=0.44.0",
    "numba>=0.57",
    "librosa>=0.11.0",
    "torch>=2.4.1",
    "torchaudio>=2.4.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "jaxdiffmodal/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 88
target-version = "py312"
output-format = "concise"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "PD", "PERF", "UP", "C4"]

[tool.poe]
verbosity = 0

[tool.poe.tasks]
# Notebook tasks
_nb_check_format = "uv run ruff format nbs --check"
_nb_clean = "uv run nbdev_clean"
_nb_format = "uv run ruff format nbs"
_nb_export = "uv run nbdev_export"
_nb_update = "uv run nbdev_update"
_nb_test = { cmd = "uv run nbdev_test", env = { JAX_PLATFORMS = "cpu", JAX_ENABLE_X64 = "true" } }
_nb_readme = { cmd = "uv run nbdev_readme", env = { JAX_PLATFORMS = "cpu" } }
_nb_proc = "uv run nbdev_proc_nbs"

# Code quality tasks
_ruff = "uv run ruff check --output-format=concise"
_format = "uv run ruff format"
_check_format = "uv run ruff format --diff"
_mypy = "uv run mypy ."

# Package management
_sync = "uv sync --all-extras"
[tool.poe.tasks.clean]
help = "Remove temporary files generated during build process"
cmd = """
rm -rf .coverage
       .mypy_cache
       .pytest_cache
       ./**/__pycache__
       _proc
       .ruff_cache
"""

[tool.poe.tasks.format]
help = "Reformat all notebooks and python files"
sequence = ["_nb_format", "_format"]

[tool.poe.tasks.sync]
help = "Synchronize package: clean, format, export library files and update dependencies"
sequence = [
    "_nb_clean",
    "_nb_format", 
    "_nb_export",
    "_format",
    "_sync",
    "clean"
]

[tool.poe.tasks.fullsync]
help = "Full package synchronization including readme update"
sequence = [
    "_nb_clean",
    "_nb_format",
    "_nb_export", 
    # "_nb_readme",
    "_format",
    "_sync",
    "clean"
]

[tool.poe.tasks.update]
help = "Update notebooks based on library changes"
sequence = [
    "_nb_clean",
    "_nb_format",
    "_nb_update",
    "_format", 
    "_sync",
    "clean"
]

[tool.poe.tasks.test]
help = "Run test suite"
sequence = ["_nb_test"]

[tool.poe.tasks.preview]
help = "Preview documentation with quarto"
cmd = "uv run nbdev_preview"
env = { JAX_PLATFORMS = "cpu" }
cwd = "nbs"

[tool.poe.tasks.publish]
help = "Publish documentation to GitHub Pages"
shell = "nbdev_proc_nbs && cd _proc && quarto publish gh-pages --no-prompt"
env = { JAX_PLATFORMS = "cpu" }

[tool.uv.sources]
nemus-magpie = { git = "https://github.com/Nemus-Project/magpie-python" }
# torch = { url = "https://download.pytorch.org/whl/nightly/cu128/torch-2.8.0.dev20250319%2Bcu128-cp39-cp39-manylinux_2_28_x86_64.whl" }